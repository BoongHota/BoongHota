{"version":3,"sources":["api/shop.ts","modules/form.ts","modules/shop.ts","modules/map.ts","modules/modal.ts","modules/index.ts","components/Animation/Boong.tsx","components/Animation/Ho.tsx","components/Animation/Ta.tsx","hooks/useMap.ts","components/Map/index.tsx","hooks/useForm.ts","components/Form/index.tsx","components/Modal/index.tsx","components/LandingPage/index.tsx","hooks/useShopList.ts","hooks/useShop.ts","components/MapPage/index.tsx","App.tsx","index.tsx"],"names":["postShopInfo","shopInfo","axios","post","getAllShopInfo","get","getSelectedShopInfo","shopType","createShopSaga","formSaga","CREATE_SHOP","CREATE_SHOP_SUCCESS","CREATE_SHOP_FAILURE","CHANGE_NAME","CHANGE_TYPE","CHANGE_ADDRESS","CHANGE_GEO_LOCATION","CHANGE_TIME","createShop","createAction","changeName","error","name","changeType","type","changeTime","address","geoLocation","time","payload","call","result","put","console","log","takeLatest","form","createReducer","state","action","getAllShopSaga","getSelectedShopSaga","shopSaga","GET_ALL_SHOP","GET_ALL_SHOP_SUCCESS","GET_ALL_SHOP_FAILURE","GET_SELECTED_SHOP","GET_SELECTED_SHOP_SUCCESS","GET_SELECTED_SHOP_FAILURE","getAllShop","getSelectedShop","allShop","selectedType","selectedShop","data","takeEvery","shop","shopList","TOGGLE_MAP","toggleMap","changeGeoLocation","changeAddress","map","isMapVisible","TOGGLE_MODAL","toggleModal","modal","isModalVisible","rootSaga","rootReducer","combineReducers","all","fork","calc","x","y","window","innerHeight","innerWidth","trans","s","Boong","useSpring","xys","config","mass","tension","friction","props","set","div","className","onMouseMove","clientX","clientY","onMouseLeave","style","transform","interpolate","Ho","useState","isFall","setIsFall","onMouseOver","setTimeout","src","alt","Ta","isRoll","setIsRoll","useMap","dispatch","useDispatch","kakao","useSelector","getAddress","useCallback","lat","lon","geocoder","maps","services","Geocoder","coord","LatLng","coord2Address","getLng","getLat","status","Status","OK","address_name","findMyGeoLocation","e","preventDefault","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","findMapGeoLocation","addSelectedGeoLocation","showMap","ref","options","center","level","Map","current","marker","Marker","getCenter","clickable","setMap","event","addListener","mouseEvent","latlng","latLng","setPosition","setDraggable","mapRef","useRef","useEffect","onClick","useForm","onChangeName","onChangeType","onChangeTime","onSubmit","onCancel","onOpenForm","RangePicker","TimePicker","Form","momentAny","b","moment","alert","onChange","target","value","id","htmlFor","format","bordered","_","_i","Modal","LandingPage","to","useShopList","setCenter","test","Object","keys","length","displayMarker","locPosition","message","iwContent","InfoWindow","content","removable","open","getDefaultAddress","drawMap","setImage","imageSrc","imageSize","Size","makeInfoWindow","drawMarkers","markerArr","i","markerImage","MarkerImage","image","push","info","close","useShop","showAllShop","showSelectedShop","MapPage","match","params","HomeFilled","App","path","exact","component","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0553bf93.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { Type } from '../types';\r\n\r\nexport const postShopInfo = (shopInfo: any) =>\r\n  axios.post('/api/shop', shopInfo);\r\nexport const getAllShopInfo = () => axios.get('/api/shop');\r\nexport const getSelectedShopInfo = (shopType: Type) =>\r\n  axios.get(`/api/shop/${shopType}`);\r\n","import { createAction, createReducer, ActionType } from 'typesafe-actions';\r\nimport { takeLatest, call, put } from 'redux-saga/effects';\r\nimport { postShopInfo } from '../api/shop';\r\nimport { Name, Type, Time, GeoLocation, Address, Shop } from '../types';\r\n\r\nconst CREATE_SHOP = 'form/CREATE_SHOP';\r\nconst CREATE_SHOP_SUCCESS = 'form/CREATE_SHOP_SUCCESS';\r\nconst CREATE_SHOP_FAILURE = 'form/CREATE_SHOP_FAILURE';\r\n\r\nconst CHANGE_NAME = 'form/CHANGE_NAME';\r\nconst CHANGE_TYPE = 'form/CHANGE_TYPE';\r\nconst CHANGE_ADDRESS = 'form/CHANGE_ADDRESS';\r\nconst CHANGE_GEO_LOCATION = 'form/CHANGE_GEO_LOCATION';\r\nconst CHANGE_TIME = 'form/CHANGE_TIME';\r\n\r\nexport const createShop = createAction(\r\n  CREATE_SHOP,\r\n  (shopInfo) => shopInfo,\r\n)<Shop>();\r\nexport const createShopSuccess = createAction(\r\n  CREATE_SHOP_SUCCESS,\r\n  (shopInfo) => shopInfo,\r\n)<Shop>();\r\nexport const createShopFailure = createAction(\r\n  CREATE_SHOP_FAILURE,\r\n  (error) => error,\r\n)<Error>();\r\n\r\nexport const changeName = createAction(CHANGE_NAME, (name) => name)<Name>();\r\nexport const changeType = createAction(CHANGE_TYPE, (type) => type)<Type>();\r\nexport const changeAddress = createAction(\r\n  CHANGE_ADDRESS,\r\n  (address) => address,\r\n)<Address>();\r\nexport const changeGeoLocation = createAction(\r\n  CHANGE_GEO_LOCATION,\r\n  (geoLocation) => geoLocation,\r\n)<GeoLocation>();\r\n\r\nexport const changeTime = createAction(CHANGE_TIME, (time: Time) => time)();\r\n\r\nconst actions = {\r\n  createShop,\r\n  createShopSuccess,\r\n  createShopFailure,\r\n  changeName,\r\n  changeGeoLocation,\r\n  changeAddress,\r\n  changeType,\r\n  changeTime,\r\n};\r\n\r\nconst createShopActions = {\r\n  createShop,\r\n  createShopSuccess,\r\n  createShopFailure,\r\n};\r\n\r\ntype FormAction = ActionType<typeof actions>;\r\ntype CreateShopActions = ActionType<typeof createShopActions>;\r\ntype FormState = Shop;\r\n\r\nfunction* createShopSaga(shopInfo: CreateShopActions) {\r\n  const { payload } = shopInfo;\r\n  try {\r\n    const result = yield call(postShopInfo, payload);\r\n    yield put({ type: CREATE_SHOP_SUCCESS, payload: result });\r\n  } catch (error) {\r\n    yield put({ type: CREATE_SHOP_FAILURE, payload: error });\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nexport function* formSaga() {\r\n  yield takeLatest(CREATE_SHOP, createShopSaga);\r\n}\r\n\r\nconst initialState: FormState = {\r\n  name: '',\r\n  type: '',\r\n  geoLocation: [33.450701, 126.570667],\r\n  address: '',\r\n  time: ['00:00', '00:00'],\r\n};\r\n\r\nexport const form = createReducer<FormState, FormAction>(initialState, {\r\n  [CREATE_SHOP_SUCCESS]: (state, action) => {\r\n    return { ...state };\r\n  },\r\n  [CREATE_SHOP_FAILURE]: (state, action) => ({\r\n    ...state,\r\n  }),\r\n  [CHANGE_NAME]: (state, { payload: name }) => ({\r\n    ...state,\r\n    name,\r\n  }),\r\n  [CHANGE_TYPE]: (state, { payload: type }) => ({\r\n    ...state,\r\n    type,\r\n  }),\r\n  [CHANGE_GEO_LOCATION]: (state, { payload: geoLocation }) => ({\r\n    ...state,\r\n    geoLocation,\r\n  }),\r\n  [CHANGE_ADDRESS]: (state, { payload: address }) => ({\r\n    ...state,\r\n    address,\r\n  }),\r\n  [CHANGE_TIME]: (state, { payload: time }) => ({ ...state, time }),\r\n});\r\n","import { createAction, createReducer, ActionType } from 'typesafe-actions';\r\nimport { takeEvery, call, put } from 'redux-saga/effects';\r\nimport { getAllShopInfo, getSelectedShopInfo } from '../api/shop';\r\nimport { Shop, ShopState, Type } from '../types';\r\n\r\nconst GET_ALL_SHOP = 'shop/GET_ALL_SHOP';\r\nconst GET_ALL_SHOP_SUCCESS = 'shop/GET_ALL_SHOP_SUCCESS';\r\nconst GET_ALL_SHOP_FAILURE = 'shop/GET_ALL_SHOP_FAILURE';\r\nconst GET_SELECTED_SHOP = 'shop/GET_SELECTED_SHOP';\r\nconst GET_SELECTED_SHOP_SUCCESS = 'shop/GET_SELECTED_SHOP_SUCCESS';\r\nconst GET_SELECTED_SHOP_FAILURE = 'shop/GET_SELECTED_SHOP_FAILURE';\r\n\r\nexport const getAllShop = createAction(GET_ALL_SHOP)();\r\nexport const getAllShopSuccess = createAction(\r\n  GET_ALL_SHOP_SUCCESS,\r\n  (allShop) => allShop,\r\n)<Shop[]>();\r\nexport const getAllShopFailure = createAction(\r\n  GET_ALL_SHOP_FAILURE,\r\n  (error) => error,\r\n)<Error>();\r\nexport const getSelectedShop = createAction(\r\n  GET_SELECTED_SHOP,\r\n  (selectedType) => selectedType,\r\n)<Type>();\r\nexport const getSelectedShopSuccess = createAction(\r\n  GET_SELECTED_SHOP_SUCCESS,\r\n  (selectedShop) => selectedShop,\r\n)<Shop[]>();\r\nexport const getSelectedShopFailure = createAction(\r\n  GET_SELECTED_SHOP_FAILURE,\r\n  (error) => error,\r\n)<Error>();\r\n\r\nconst actions = {\r\n  getAllShop,\r\n  getAllShopSuccess,\r\n  getAllShopFailure,\r\n  getSelectedShop,\r\n  getSelectedShopSuccess,\r\n  getSelectedShopFailure,\r\n};\r\n\r\n// 이부분은 내가맘대로만듦....ㅎ.ㅎ\r\nconst selectedShopActions = {\r\n  getSelectedShop,\r\n};\r\n\r\ntype ShopAction = ActionType<typeof actions>;\r\ntype SelectedShopAction = ActionType<typeof selectedShopActions>;\r\n\r\n// 데이터 얻어오는 거를 payload로 해줘야 리듀서에서 접근해서 사용할수 있더라구요ㅠㅜ\r\n// 제가 잘못쓴걸지도 모르지만 일단은 만들고 수정하겠습니다!\r\nfunction* getAllShopSaga() {\r\n  try {\r\n    const {\r\n      data: { allShop },\r\n    } = yield call(getAllShopInfo);\r\n    yield put({ type: GET_ALL_SHOP_SUCCESS, payload: allShop });\r\n  } catch (error) {\r\n    yield put({ type: GET_ALL_SHOP_FAILURE, payload: error });\r\n    console.log(error);\r\n  }\r\n}\r\n\r\n// 이부분 payload는 실제로 하면서 작성하기\r\nfunction* getSelectedShopSaga({ payload }: SelectedShopAction) {\r\n  try {\r\n    const {\r\n      data: { selectedShop },\r\n    } = yield call(getSelectedShopInfo, payload);\r\n    yield put({ type: GET_SELECTED_SHOP_SUCCESS, payload: selectedShop });\r\n  } catch (error) {\r\n    yield put({ type: GET_SELECTED_SHOP_FAILURE, payload: error });\r\n    console.log(error);\r\n  }\r\n}\r\nexport function* shopSaga() {\r\n  yield takeEvery(GET_ALL_SHOP, getAllShopSaga);\r\n  yield takeEvery(GET_SELECTED_SHOP, getSelectedShopSaga);\r\n}\r\n\r\nconst initialState: ShopState = {\r\n  shopList: [],\r\n  type: '',\r\n};\r\n\r\nexport const shop = createReducer<ShopState, ShopAction>(initialState, {\r\n  [GET_ALL_SHOP_SUCCESS]: (state, { payload }) => {\r\n    state.shopList = [...payload];\r\n    state.type = '';\r\n    return { ...state };\r\n  },\r\n  [GET_ALL_SHOP_FAILURE]: (state) => {\r\n    return { ...state };\r\n  },\r\n  [GET_SELECTED_SHOP_SUCCESS]: (state, { payload }) => {\r\n    state.shopList = [...payload];\r\n    state.type = '';\r\n    return { ...state };\r\n  },\r\n  [GET_SELECTED_SHOP_FAILURE]: (state) => {\r\n    return { ...state };\r\n  },\r\n});\r\n","import { createAction, createReducer, ActionType } from 'typesafe-actions';\r\nimport { Map, GeoLocation, Address } from '../types';\r\n\r\nconst TOGGLE_MAP = 'map/TOGGLE_MAP';\r\nconst CHANGE_GEO_LOCATION = 'map/CHANGE_LOCATION';\r\nconst CHANGE_ADDRESS = 'map/CHANGE_LOCATION_NUM';\r\n\r\nexport const toggleMap = createAction(TOGGLE_MAP)();\r\n\r\nexport const changeGeoLocation = createAction(\r\n  CHANGE_GEO_LOCATION,\r\n  (geoLocation) => geoLocation,\r\n)<GeoLocation>();\r\n\r\nexport const changeAddress = createAction(\r\n  CHANGE_ADDRESS,\r\n  (address) => address,\r\n)<Address>();\r\n\r\nconst actions = {\r\n  toggleMap,\r\n  changeGeoLocation,\r\n  changeAddress,\r\n};\r\n\r\ntype MapAction = ActionType<typeof actions>;\r\ntype MapState = Map;\r\n\r\nconst initialState: MapState = {\r\n  isMapVisible: false,\r\n  geoLocation: [0, 0],\r\n  address: '',\r\n};\r\n\r\nexport const map = createReducer<MapState, MapAction>(initialState, {\r\n  [TOGGLE_MAP]: (state) => {\r\n    return { ...state, isMapVisible: !state.isMapVisible };\r\n  },\r\n  [CHANGE_GEO_LOCATION]: (state, { payload: geoLocation }) => ({\r\n    ...state,\r\n    geoLocation,\r\n  }),\r\n  [CHANGE_ADDRESS]: (state, { payload: address }) => ({\r\n    ...state,\r\n    address,\r\n  }),\r\n});\r\n","import { createAction, createReducer, ActionType } from 'typesafe-actions';\r\nimport { Modal } from '../types';\r\n\r\nconst TOGGLE_MODAL = 'modal/TOGGLE_MODAL';\r\n\r\nexport const toggleModal = createAction(TOGGLE_MODAL)();\r\n\r\nconst actions = {\r\n  toggleModal,\r\n};\r\n\r\ntype ModalAction = ActionType<typeof actions>;\r\n\r\n//음...여긴 어떻게해야할지 몰라서 제 마음대로 했습니다^_^\r\ntype ModalState = Modal;\r\n\r\nconst initialState: ModalState = {\r\n  isModalVisible: false,\r\n};\r\n\r\nexport const modal = createReducer<ModalState, ModalAction>(initialState, {\r\n  [TOGGLE_MODAL]: (state) => {\r\n    return { ...state, isModalVisible: !state.isModalVisible };\r\n  },\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { all, fork } from 'redux-saga/effects';\r\nimport { formSaga, form } from './form';\r\nimport { shopSaga, shop } from './shop';\r\nimport { map } from './map';\r\nimport { modal } from './modal';\r\n\r\nexport const rootReducer = combineReducers({ form, shop, map, modal });\r\n\r\nexport function* rootSaga() {\r\n  yield all([fork(formSaga), fork(shopSaga)]);\r\n}\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import React from 'react';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport './styles.scss';\r\n\r\nconst calc = (x: number, y: number): number[] => [\r\n  -(y - window.innerHeight / 2) / 20,\r\n  (x - window.innerWidth / 2) / 20,\r\n  1.3,\r\n];\r\nconst trans = (x: number, y: number, s: number) =>\r\n  `perspective(400px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\r\n\r\nconst Boong = () => {\r\n  const [props, set]: any = useSpring(() => ({\r\n    xys: [0, 0, 1],\r\n    config: { mass: 5, tension: 700, friction: 40 },\r\n  }));\r\n\r\n  return (\r\n    <animated.div\r\n      className=\"boong\"\r\n      onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\r\n      onMouseLeave={() => set({ xys: [0, 0, 1] })}\r\n      style={{ transform: props.xys.interpolate(trans) }}\r\n    ></animated.div>\r\n  );\r\n};\r\n\r\nexport default Boong;\r\n","import React, { useState } from 'react';\r\nimport './styles.scss';\r\nconst Ho = () => {\r\n  const [isFall, setIsFall] = useState(false);\r\n  const mouseOver = () => {\r\n    if (!isFall) {\r\n      setIsFall(true);\r\n      setTimeout(() => setIsFall(false), 2000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={'ho icon ' + (isFall ? 'fall' : '')}\r\n      onMouseOver={mouseOver}\r\n    >\r\n      {isFall && (\r\n        <img\r\n          src=\"https://media.vlpt.us/images/dolarge/post/b97ad49f-d383-46dd-aa09-bdb33372eb2b/smoke.png\"\r\n          alt=\"smoke\"\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Ho;\r\n","import React, { useState } from 'react';\r\nimport './styles.scss';\r\n\r\nconst Ta = () => {\r\n  const [isRoll, setIsRoll] = useState(false);\r\n\r\n  const mouseOver = () => {\r\n    console.log(123);\r\n    setIsRoll(true);\r\n    setTimeout(() => setIsRoll(false), 2000);\r\n  };\r\n  return (\r\n    <div\r\n      className={'ta icon ' + (isRoll ? 'roll' : '')}\r\n      onMouseOver={mouseOver}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Ta;\r\n","import { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeGeoLocation, changeAddress, toggleMap } from '../modules/map';\r\nimport { RootState } from '../modules';\r\n\r\nconst useMap = (window: any) => {\r\n  const dispatch = useDispatch();\r\n  const { kakao } = window;\r\n  const { geoLocation, address, isMapVisible } = useSelector(\r\n    (state: RootState) => state.map,\r\n  );\r\n  const getAddress = useCallback(\r\n    (lat: number, lon: number) => {\r\n      const geocoder = new kakao.maps.services.Geocoder();\r\n      const coord = new kakao.maps.LatLng(lat, lon);\r\n      const callback = function (result: any, status: any) {\r\n        if (status === kakao.maps.services.Status.OK) {\r\n          dispatch(changeAddress(result[0].address.address_name));\r\n        }\r\n      };\r\n\r\n      geocoder.coord2Address(coord.getLng(), coord.getLat(), callback);\r\n    },\r\n    [dispatch, kakao],\r\n  );\r\n\r\n  const findMyGeoLocation = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      if (window.navigator.geolocation) {\r\n        window.navigator.geolocation.getCurrentPosition(function (\r\n          position: any,\r\n        ) {\r\n          const lat = position.coords.latitude; // 위도\r\n          const lon = position.coords.longitude; // 경도\r\n          dispatch(changeGeoLocation([lat, lon]));\r\n          getAddress(lat, lon);\r\n        });\r\n      } else {\r\n        console.log('geolocation을 사용할수 없어요..');\r\n      }\r\n    },\r\n    [dispatch, window, getAddress],\r\n  );\r\n\r\n  const findMapGeoLocation = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      dispatch(toggleMap());\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const addSelectedGeoLocation = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      dispatch(toggleMap());\r\n      getAddress(...geoLocation);\r\n    },\r\n    [dispatch, geoLocation, getAddress],\r\n  );\r\n\r\n  const showMap = useCallback(\r\n    (ref) => {\r\n      if (window.navigator.geolocation) {\r\n        window.navigator.geolocation.getCurrentPosition(function (\r\n          position: any,\r\n        ) {\r\n          const lat = position.coords.latitude; // 위도\r\n          const lon = position.coords.longitude; // 경도\r\n          const options = {\r\n            center: new kakao.maps.LatLng(lat, lon),\r\n            level: 3,\r\n          };\r\n          let map = new kakao.maps.Map(ref.current, options);\r\n          let marker = new kakao.maps.Marker({\r\n            // 지도 중심좌표에 마커를 생성합니다\r\n            position: map.getCenter(),\r\n            clickable: true, // 마커를 클릭했을 때 지도의 클릭 이벤트가 발생하지 않도록 설정합니다\r\n          });\r\n\r\n          // 지도에 마커를 표시합니다\r\n          marker.setMap(map);\r\n\r\n          kakao.maps.event.addListener(\r\n            map,\r\n            'click',\r\n            function (mouseEvent: any) {\r\n              // 클릭한 위도, 경도 정보를 가져옵니다\r\n              let latlng = mouseEvent.latLng;\r\n              let lat = latlng.getLat();\r\n              let lon = latlng.getLng();\r\n              dispatch(changeGeoLocation([lat, lon]));\r\n              // 마커 위치를 클릭한 위치로 옮깁니다\r\n              marker.setPosition(latlng);\r\n              // 마커를 옮길수 있습니다\r\n              marker.setDraggable(true);\r\n            },\r\n          );\r\n        });\r\n      } else {\r\n        console.log('geolocation을 사용할수 없어요..');\r\n      }\r\n    },\r\n    [dispatch, window, kakao],\r\n  );\r\n\r\n  return {\r\n    geoLocation,\r\n    address,\r\n    isMapVisible,\r\n    getAddress,\r\n    findMyGeoLocation,\r\n    findMapGeoLocation,\r\n    addSelectedGeoLocation,\r\n    showMap,\r\n  };\r\n};\r\n\r\nexport default useMap;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport useMap from '../../hooks/useMap';\r\n\r\nimport './styles.scss';\r\n\r\nconst Map = () => {\r\n  const mapRef: any = useRef();\r\n  const { addSelectedGeoLocation, showMap, isMapVisible } = useMap(window);\r\n  useEffect(() => {\r\n    if (isMapVisible) {\r\n      showMap(mapRef);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"mini-map-container\">\r\n      <div ref={mapRef} className=\"mini-map-box\"></div>\r\n      <button className=\"add-btn\" onClick={addSelectedGeoLocation}>\r\n        <p>+</p>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../modules';\r\nimport {\r\n  createShop,\r\n  changeName,\r\n  changeType,\r\n  changeTime,\r\n} from '../modules/form';\r\nimport { toggleModal } from '../modules/modal';\r\nimport { Name, Type, Time, Shop } from '../types';\r\n\r\nconst useForm = () => {\r\n  const dispatch = useDispatch();\r\n  const { name, type, time } = useSelector((state: RootState) => state.form);\r\n  const { isModalVisible } = useSelector((state: RootState) => state.modal);\r\n  const onChangeName = useCallback(\r\n    (name: Name) => {\r\n      dispatch(changeName(name));\r\n    },\r\n    [dispatch],\r\n  );\r\n  const onChangeType = useCallback((type: Type) => dispatch(changeType(type)), [\r\n    dispatch,\r\n  ]);\r\n  const onChangeTime = useCallback((time: Time) => dispatch(changeTime(time)), [\r\n    dispatch,\r\n  ]);\r\n  const onSubmit = useCallback(\r\n    (shopInfo: Shop) => {\r\n      dispatch(toggleModal());\r\n      console.log(shopInfo);\r\n      dispatch(createShop(shopInfo));\r\n    },\r\n    [dispatch],\r\n  );\r\n  const onCancel = useCallback(\r\n    (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n      e.preventDefault();\r\n      dispatch(toggleModal());\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const onOpenForm = useCallback(() => dispatch(toggleModal()), [dispatch]);\r\n\r\n  return {\r\n    name,\r\n    type,\r\n    time,\r\n    isModalVisible,\r\n    onChangeName,\r\n    onChangeType,\r\n    onChangeTime,\r\n    onSubmit,\r\n    onCancel,\r\n    onOpenForm,\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { TimePicker } from 'antd';\r\nimport useForm from '../../hooks/useForm';\r\nimport useMap from '../../hooks/useMap';\r\n\r\nimport './styles.scss';\r\nconst { RangePicker } = TimePicker;\r\n\r\nconst Form = () => {\r\n  const {\r\n    name,\r\n    type,\r\n    time,\r\n    onChangeName,\r\n    onChangeType,\r\n    onChangeTime,\r\n    onSubmit,\r\n    onCancel,\r\n  } = useForm();\r\n  const {\r\n    findMyGeoLocation,\r\n    findMapGeoLocation,\r\n    geoLocation,\r\n    address,\r\n  } = useMap(window);\r\n\r\n  const submitWithCheck = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    if (name === '') {\r\n      alert('가게이름뭔데');\r\n      return;\r\n    }\r\n    if (type === '') {\r\n      return;\r\n    }\r\n    if (address === '') {\r\n      return;\r\n    }\r\n    if (time[0] === '00:00' || time[1] === '00:00') {\r\n      return;\r\n    }\r\n    onSubmit({ name, type, geoLocation, address, time });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(789);\r\n  }, [name, type, geoLocation, address, time]);\r\n  const momentAny = useCallback((b: any): any => {\r\n    return moment(b);\r\n  }, []);\r\n\r\n  return (\r\n    <form className=\"modal-form\" onSubmit={submitWithCheck}>\r\n      <div\r\n        className=\"kind-box\"\r\n        onChange={(e: any) => onChangeType(e.target.value)}\r\n      >\r\n        <input\r\n          name=\"food\"\r\n          type=\"radio\"\r\n          value=\"boong\"\r\n          id=\"boong\"\r\n          className=\"boong-mini\"\r\n        />\r\n        <label className=\"boong-label\" htmlFor=\"boong\" />\r\n        <input\r\n          name=\"food\"\r\n          type=\"radio\"\r\n          id=\"ho\"\r\n          value=\"ho\"\r\n          className=\"ho-mini\"\r\n        />\r\n        <label className=\"ho-label\" htmlFor=\"ho\" />\r\n        <input\r\n          name=\"food\"\r\n          type=\"radio\"\r\n          id=\"ta\"\r\n          value=\"ta\"\r\n          className=\"ta-mini\"\r\n        />\r\n        <label className=\"ta-label\" htmlFor=\"ta\" />\r\n      </div>\r\n      <div className=\"input-box\">\r\n        <div className=\"input-box_name\">\r\n          <label htmlFor=\"name\">가게명</label>\r\n          <input\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              onChangeName(e.target.value)\r\n            }\r\n            value={name}\r\n            id=\"name\"\r\n            name=\"name\"\r\n          />\r\n        </div>\r\n        <div className=\"input-box_location\">\r\n          <label htmlFor=\"location\">가게위치</label>\r\n          <input id=\"location\" name=\"location\" value={address} />\r\n          <div className=\"button-box_location\">\r\n            <button onClick={findMapGeoLocation}>지도에서 찾기</button>\r\n            <button onClick={findMyGeoLocation}>현재 위치</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"input-box_time\">\r\n          <label htmlFor=\"time\">영업시간</label>\r\n          <RangePicker\r\n            format=\"HH:mm\"\r\n            bordered={false}\r\n            className=\"time\"\r\n            onChange={(_, b) => onChangeTime(momentAny(b)._i)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"button-box\">\r\n        <button onClick={onCancel}>뒤로가기</button>\r\n        <button type=\"submit\">등록하기</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport useMap from '../../hooks/useMap';\r\nimport Map from '../Map';\r\nimport Form from '../Form';\r\nimport './styles.scss';\r\n\r\nconst Modal = () => {\r\n  const { isMapVisible } = useMap(window);\r\n  return (\r\n    <div className={'modal-container'}>{isMapVisible ? <Map /> : <Form />}</div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Boong from '../Animation/Boong';\r\nimport Ho from '../Animation/Ho';\r\nimport Ta from '../Animation/Ta';\r\nimport Modal from '../Modal';\r\nimport useForm from '../../hooks/useForm';\r\n\r\nimport './styles.scss';\r\n\r\nconst LandingPage = () => {\r\n  const { onOpenForm, isModalVisible } = useForm();\r\n  return (\r\n    <div className=\"landing-container\">\r\n      <main>\r\n        <Link to=\"/map/boong\">\r\n          <Boong />\r\n        </Link>\r\n        <Link to=\"/map/ho\">\r\n          <Ho />\r\n        </Link>\r\n        <Link to=\"/map/ta\">\r\n          <Ta />\r\n        </Link>\r\n      </main>\r\n      <button onClick={onOpenForm}>붕호타 + </button>\r\n      {isModalVisible && <Modal />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","import { useCallback, useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../modules';\r\nimport { Shop } from '../types';\r\n\r\nconst boongImg =\r\n  'https://media.vlpt.us/images/dolarge/post/9df7aa9c-5827-4928-8711-25763612cc5f/%EB%B6%95%EC%96%B4.png';\r\nconst hoImg =\r\n  'https://media.vlpt.us/images/dolarge/post/18a0d072-1987-44e6-a8dc-74fb5d40a337/%ED%98%B8%EB%96%A1.png';\r\nconst taImg =\r\n  'https://media.vlpt.us/images/dolarge/post/9afdecdf-2a14-4079-9c06-487d657c6c7e/%ED%83%80%EC%BD%94.png';\r\n\r\nconst useShopList = (window: any, ref: any) => {\r\n  const { kakao } = window;\r\n  const [map, setMap] = useState({ setCenter: (test: any) => {} });\r\n  const { geoLocation, address, isMapVisible } = useSelector(\r\n    (state: RootState) => state.map,\r\n  );\r\n  const { shopList } = useSelector((state: RootState) => state.shop);\r\n  useEffect(() => {\r\n    console.log(map);\r\n    if (Object.keys(map).length === 1) {\r\n      setMap(\r\n        new kakao.maps.Map(ref.current, {\r\n          center: new kakao.maps.LatLng(...geoLocation),\r\n          level: 3,\r\n        }),\r\n      );\r\n    }\r\n  }, [map, kakao, geoLocation, ref]);\r\n\r\n  const displayMarker = useCallback(\r\n    (locPosition, message) => {\r\n      if (Object.keys(map).length > 1) {\r\n        let marker = new kakao.maps.Marker({\r\n          map: map,\r\n          position: locPosition,\r\n        });\r\n\r\n        let iwContent = message;\r\n        let iwRemoveable = true;\r\n        let infowindow = new kakao.maps.InfoWindow({\r\n          content: iwContent,\r\n          removable: iwRemoveable,\r\n        });\r\n\r\n        infowindow.open(map, marker);\r\n        map.setCenter(locPosition);\r\n      }\r\n    },\r\n    [kakao, map],\r\n  );\r\n\r\n  const getDefaultAddress = useCallback(() => {\r\n    if (window.navigator.geolocation) {\r\n      window.navigator.geolocation.getCurrentPosition(function (position: any) {\r\n        const lat = position.coords.latitude; // 위도\r\n        const lon = position.coords.longitude; // 경도\r\n        const locPosition = new kakao.maps.LatLng(lat, lon);\r\n        const message = '<div style=\"padding:5px; \">내 위치</div>';\r\n\r\n        displayMarker(locPosition, message);\r\n      });\r\n    } else {\r\n      const locPosition = new kakao.maps.LatLng(...geoLocation);\r\n      const message = 'geolocation을 사용할수 없어요..';\r\n\r\n      displayMarker(locPosition, message);\r\n    }\r\n  }, [displayMarker, kakao, window, geoLocation]);\r\n\r\n  const drawMap = useCallback(() => {\r\n    getDefaultAddress();\r\n  }, [getDefaultAddress]);\r\n\r\n  const setImage = useCallback(\r\n    (type) => {\r\n      let imageSrc: string;\r\n      let imageSize: any;\r\n      switch (type) {\r\n        case 'boong':\r\n          imageSrc = boongImg;\r\n          imageSize = new kakao.maps.Size(35, 24);\r\n          break;\r\n        case 'ho':\r\n          imageSrc = hoImg;\r\n          imageSize = new kakao.maps.Size(30, 30);\r\n          break;\r\n        case 'ta':\r\n          imageSrc = taImg;\r\n          imageSize = new kakao.maps.Size(30, 30);\r\n          break;\r\n        default:\r\n          imageSrc =\r\n            'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png';\r\n          imageSize = new kakao.maps.Size(24, 35);\r\n      }\r\n      return [imageSrc, imageSize];\r\n    },\r\n    [kakao.maps.Size],\r\n  );\r\n\r\n  const makeInfoWindow = useCallback(\r\n    (shop: any) => {\r\n      // 마커에 커서가 오버됐을 때 마커 위에 표시할 인포윈도우를 생성합니다\r\n      const iwContent = `<div class=\"marker-info\"><p class=\"name\">${shop.name}</p><p class=\"address\">${shop.address}</p><p class=\"time\">${shop.time[0]}-${shop.time[1]}</p></div>`; // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\r\n\r\n      // 인포윈도우를 생성합니다\r\n      var infowindow = new kakao.maps.InfoWindow({\r\n        content: iwContent,\r\n      });\r\n      return infowindow;\r\n    },\r\n    [kakao.maps.InfoWindow],\r\n  );\r\n\r\n  const drawMarkers = useCallback(\r\n    (shopList: Shop[]) => {\r\n      let markerArr: any[] = [];\r\n      if (Object.keys(map).length > 1) {\r\n        for (var i = 0; i < shopList.length; i++) {\r\n          const [imageSrc, imageSize] = setImage(shopList[i].type);\r\n\r\n          var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize);\r\n\r\n          // 마커를 생성합니다\r\n          var marker = new kakao.maps.Marker({\r\n            map: map,\r\n            position: new kakao.maps.LatLng(...shopList[i].geoLocation),\r\n            image: markerImage,\r\n          });\r\n\r\n          markerArr.push(marker);\r\n\r\n          const info = makeInfoWindow(shopList[i]);\r\n\r\n          // 마커에 마우스오버 이벤트를 등록합니다\r\n          (function (marker, info) {\r\n            kakao.maps.event.addListener(marker, 'mouseover', function () {\r\n              info.open(map, marker);\r\n            });\r\n\r\n            kakao.maps.event.addListener(marker, 'mouseout', function () {\r\n              info.close();\r\n            });\r\n          })(marker, info);\r\n        }\r\n      }\r\n      return markerArr;\r\n    },\r\n    [kakao, map, setImage],\r\n  );\r\n\r\n  return {\r\n    map,\r\n    shopList,\r\n    geoLocation,\r\n    address,\r\n    isMapVisible,\r\n    drawMap,\r\n    drawMarkers,\r\n  };\r\n};\r\n\r\nexport default useShopList;\r\n","import { useCallback } from 'react';\r\nimport { getAllShop, getSelectedShop } from '../modules/shop';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { Type } from '../types';\r\n\r\nconst useShop = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const showAllShop = useCallback(() => {\r\n    dispatch(getAllShop());\r\n  }, [dispatch]);\r\n\r\n  const showSelectedShop = useCallback(\r\n    (type: Type) => {\r\n      dispatch(getSelectedShop(type));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return {\r\n    showAllShop,\r\n    showSelectedShop,\r\n  };\r\n};\r\n\r\nexport default useShop;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport useShopList from '../../hooks/useShopList';\r\nimport useShop from '../../hooks/useShop';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeFilled } from '@ant-design/icons';\r\nimport { Type } from '../../types';\r\nimport './styles.scss';\r\n\r\nconst MapPage = ({\r\n  match: {\r\n    params: { id },\r\n  },\r\n}: any) => {\r\n  const mapRef: any = useRef();\r\n  const { map, shopList, drawMap, drawMarkers } = useShopList(window, mapRef);\r\n  const { showAllShop, showSelectedShop } = useShop();\r\n  let markerArr: any[] = [];\r\n\r\n  useEffect(() => {\r\n    drawMap();\r\n    if (Object.keys(map).length > 1) {\r\n      showSelectedShop(id);\r\n    }\r\n  }, [map, id, drawMap, showSelectedShop]);\r\n\r\n  useEffect(() => {\r\n    if (markerArr.length === 0) {\r\n      markerArr = drawMarkers(shopList);\r\n    }\r\n  }, [shopList]);\r\n\r\n  const changeType = (type?: Type) => {\r\n    markerArr.map((marker) => marker.setMap(null));\r\n    if (!type) {\r\n      showAllShop();\r\n    } else {\r\n      showSelectedShop(type);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"map-container\">\r\n      <div id=\"map\" className=\"map-box\" ref={mapRef}></div>\r\n      <ul className=\"button-box\">\r\n        <li>\r\n          <Link to=\"/\">\r\n            <HomeFilled className=\"home-icon\" />\r\n          </Link>\r\n        </li>\r\n        <li>\r\n          <img\r\n            src=\"https://media.vlpt.us/images/dolarge/post/aa3ea81d-4b5a-431a-9f22-090bdbea1a71/all.png\"\r\n            onClick={() => changeType('')}\r\n            alt=\"select-all-button\"\r\n          />\r\n        </li>\r\n        <li>\r\n          <img\r\n            src=\"https://media.vlpt.us/images/dolarge/post/9df7aa9c-5827-4928-8711-25763612cc5f/%EB%B6%95%EC%96%B4.png\"\r\n            onClick={() => changeType('boong')}\r\n            alt=\"boong-button\"\r\n          />\r\n        </li>\r\n        <li>\r\n          <img\r\n            src=\"https://media.vlpt.us/images/dolarge/post/18a0d072-1987-44e6-a8dc-74fb5d40a337/%ED%98%B8%EB%96%A1.png\"\r\n            onClick={() => changeType('ho')}\r\n            alt=\"ho-button\"\r\n          />\r\n        </li>\r\n        <li>\r\n          <img\r\n            src=\"https://media.vlpt.us/images/dolarge/post/9afdecdf-2a14-4079-9c06-487d657c6c7e/%ED%83%80%EC%BD%94.png\"\r\n            onClick={() => changeType('ta')}\r\n            alt=\"ta-button\"\r\n          />\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPage;\r\n","import './App.scss';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\nimport LandingPage from './components/LandingPage';\r\nimport MapPage from './components/MapPage';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <header>\r\n          <Link to=\"/\">\r\n            <img\r\n              src=\"https://media.vlpt.us/images/dolarge/post/0f4e3ed7-c07c-4e48-afea-dba71b3b306b/logo.png\"\r\n              alt=\"logo\"\r\n            />\r\n          </Link>\r\n        </header>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={LandingPage} />\r\n          <Route path=\"/map/:id\" component={MapPage} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { rootReducer, rootSaga } from './modules';\r\n\r\nimport App from './App';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}