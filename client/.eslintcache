[{"C:\\project\\BoongHota\\client\\src\\App.js":"1","C:\\project\\BoongHota\\client\\src\\modules\\index.js":"2","C:\\project\\BoongHota\\client\\src\\components\\Animation\\Boong.js":"3","C:\\project\\BoongHota\\client\\src\\index.js":"4","C:\\project\\BoongHota\\client\\src\\components\\MapPage\\Container.js":"5","C:\\project\\BoongHota\\client\\src\\components\\Animation\\Ho.js":"6","C:\\project\\BoongHota\\client\\src\\components\\Animation\\Ta.js":"7","C:\\project\\BoongHota\\client\\src\\components\\MapPage\\Presenter.js":"8","C:\\project\\BoongHota\\client\\src\\components\\Modal\\Map.js":"9","C:\\project\\BoongHota\\client\\src\\components\\Modal\\ModalForm.js":"10","C:\\project\\BoongHota\\client\\src\\components\\Modal\\Container.js":"11","C:\\project\\BoongHota\\client\\src\\modules\\store.js":"12","C:\\project\\BoongHota\\client\\src\\components\\LandingPage\\index.js":"13"},{"size":700,"mtime":1608688951246,"results":"14","hashOfConfig":"15"},{"size":263,"mtime":1608534264529,"results":"16","hashOfConfig":"15"},{"size":772,"mtime":1608688951254,"results":"17","hashOfConfig":"15"},{"size":663,"mtime":1607947973448,"results":"18","hashOfConfig":"15"},{"size":1601,"mtime":1608253122924,"results":"19","hashOfConfig":"15"},{"size":573,"mtime":1608374681640,"results":"20","hashOfConfig":"15"},{"size":419,"mtime":1608688951257,"results":"21","hashOfConfig":"15"},{"size":278,"mtime":1608253122926,"results":"22","hashOfConfig":"15"},{"size":370,"mtime":1608688951268,"results":"23","hashOfConfig":"15"},{"size":2298,"mtime":1608778727510,"results":"24","hashOfConfig":"15"},{"size":4511,"mtime":1608778765568,"results":"25","hashOfConfig":"15"},{"size":1023,"mtime":1608534288944,"results":"26","hashOfConfig":"15"},{"size":896,"mtime":1608688951262,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13j93s5",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\project\\BoongHota\\client\\src\\App.js",[],"C:\\project\\BoongHota\\client\\src\\modules\\index.js",[],"C:\\project\\BoongHota\\client\\src\\components\\Animation\\Boong.js",[],"C:\\project\\BoongHota\\client\\src\\index.js",[],[],"C:\\project\\BoongHota\\client\\src\\components\\MapPage\\Container.js",[],[],"C:\\project\\BoongHota\\client\\src\\components\\Animation\\Ho.js",[],"C:\\project\\BoongHota\\client\\src\\components\\Animation\\Ta.js",[],"C:\\project\\BoongHota\\client\\src\\components\\MapPage\\Presenter.js",[],"C:\\project\\BoongHota\\client\\src\\components\\Modal\\Map.js",[],"C:\\project\\BoongHota\\client\\src\\components\\Modal\\ModalForm.js",[],"C:\\project\\BoongHota\\client\\src\\components\\Modal\\Container.js",["58"],"import React, { useRef, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { createStore } from '../../modules/store';\r\nimport Map from './Map';\r\nimport ModalForm from './ModalForm';\r\n\r\nconst { kakao } = window;\r\n\r\nconst Container = ({ setOpenModal }) => {\r\n  const ref = useRef();\r\n  const dispatch = useDispatch();\r\n\r\n  const [food, setFood] = useState('');\r\n  const [storeName, setStoreName] = useState('');\r\n  const [location, setLocation] = useState();\r\n  const [locationNum, setLocationNum] = useState([0, 0]);\r\n  const [openMap, setOpenMap] = useState(false);\r\n  const [time, setTime] = useState(['00:00', '00:00']);\r\n\r\n  // form을 submit하는 함수\r\n  const handleSumbit = (e) => {\r\n    e.preventDefault();\r\n    setOpenModal(false);\r\n    const payload = {\r\n      food: e.target.food.value,\r\n      storeName,\r\n      location,\r\n      locationNum,\r\n      time,\r\n    };\r\n    dispatch(createStore(payload));\r\n  };\r\n\r\n  // 모달을 끄는 함수\r\n  const handleCancel = (e) => {\r\n    e.preventDefault();\r\n    setOpenModal(false);\r\n  };\r\n\r\n  // 등록할 음식종류를 고르는 함수\r\n  const selectFood = (e) => {\r\n    e.preventDefault();\r\n    setFood(e.target.classList[0]);\r\n  };\r\n\r\n  // lat, lon을 받아와 구 주소로 변경해주는 함수\r\n  const getAddress = (lat, lon) => {\r\n    const geocoder = new kakao.maps.services.Geocoder();\r\n    const coord = new kakao.maps.LatLng(lat, lon);\r\n    const callback = function (result, status) {\r\n      if (status === kakao.maps.services.Status.OK) {\r\n        setLocation(result[0].address.address_name);\r\n      }\r\n    };\r\n\r\n    geocoder.coord2Address(coord.getLng(), coord.getLat(), callback);\r\n  };\r\n\r\n  // 나의 현재위치를 얻어오는 함수\r\n  const findMyAddress = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        const lat = position.coords.latitude; // 위도\r\n        const lon = position.coords.longitude; // 경도\r\n        setLocationNum([lat, lon]);\r\n        getAddress(lat, lon);\r\n      });\r\n    } else {\r\n      alert('geolocation을 사용할수 없어요..');\r\n    }\r\n  };\r\n\r\n  // map상에서 위치를 찾음\r\n  const findMapAddress = (e) => {\r\n    e.preventDefault();\r\n    setOpenMap(true);\r\n    showMap();\r\n  };\r\n\r\n  // map 상에서 추가할 위치를 찾으면 그 위치를 등록하는 함수\r\n  const addNewPlace = () => {\r\n    setOpenMap(false);\r\n    getAddress(...locationNum);\r\n  };\r\n\r\n  // 실제 map을 보여주고 map과 관련된 설정을 하는 함수\r\n  const showMap = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        const lat = position.coords.latitude; // 위도\r\n        const lon = position.coords.longitude; // 경도\r\n        const options = {\r\n          center: new kakao.maps.LatLng(lat, lon),\r\n          level: 3,\r\n        };\r\n        let map = new kakao.maps.Map(ref.current, options);\r\n        let marker = new kakao.maps.Marker({\r\n          // 지도 중심좌표에 마커를 생성합니다\r\n          position: map.getCenter(),\r\n          clickable: true, // 마커를 클릭했을 때 지도의 클릭 이벤트가 발생하지 않도록 설정합니다\r\n        });\r\n\r\n        // 지도에 마커를 표시합니다\r\n        marker.setMap(map);\r\n\r\n        kakao.maps.event.addListener(map, 'click', function (mouseEvent) {\r\n          // 클릭한 위도, 경도 정보를 가져옵니다\r\n          let latlng = mouseEvent.latLng;\r\n          setLocationNum([latlng.getLat(), latlng.getLng()]);\r\n          // 마커 위치를 클릭한 위치로 옮깁니다\r\n          marker.setPosition(latlng);\r\n          // 마커를 옮길수 있습니다\r\n          marker.setDraggable(true);\r\n        });\r\n      });\r\n    } else {\r\n      alert('geolocation을 사용할수 없어요..');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={'modal-container'}>\r\n      {openMap ? (\r\n        <Map ref={ref} addNewPlace={addNewPlace} />\r\n      ) : (\r\n        <ModalForm\r\n          food={food}\r\n          storeName={storeName}\r\n          location={location}\r\n          selectFood={selectFood}\r\n          findMapAddress={findMapAddress}\r\n          findMyAddress={findMyAddress}\r\n          setStoreName={setStoreName}\r\n          setTime={setTime}\r\n          handleCancel={handleCancel}\r\n          handleSumbit={handleSumbit}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n",[],"C:\\project\\BoongHota\\client\\src\\modules\\store.js",["59","60","61","62"],"C:\\project\\BoongHota\\client\\src\\components\\LandingPage\\index.js",[],{"ruleId":"63","severity":1,"message":"64","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":21},{"ruleId":"63","severity":1,"message":"67","line":2,"column":22,"nodeType":"65","messageId":"66","endLine":2,"endColumn":31},{"ruleId":"63","severity":1,"message":"68","line":6,"column":7,"nodeType":"65","messageId":"66","endLine":6,"endColumn":27},{"ruleId":"63","severity":1,"message":"69","line":9,"column":7,"nodeType":"65","messageId":"66","endLine":9,"endColumn":25},{"ruleId":"63","severity":1,"message":"70","line":10,"column":7,"nodeType":"65","messageId":"66","endLine":10,"endColumn":25},"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'takeEvery' is defined but never used.","'CREATE_STORE_FAILURE' is assigned a value but never used.","'GET_STORES_SUCCESS' is assigned a value but never used.","'GET_STORES_FAILURE' is assigned a value but never used."]